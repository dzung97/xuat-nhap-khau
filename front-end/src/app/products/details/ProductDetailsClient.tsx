"use client"
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ArrowLeft, Leaf, Star, Globe, Package, CheckCircle, Truck, Calendar, Award, BarChart3, Map, FileText } from "lucide-react";
import Link from "next/link";
import { useSearchParams } from 'next/navigation'; 
export default function ProductDetailsClient() {
   const searchParams = useSearchParams(); // ‚úÖ NOT destructured
  const productId = searchParams.get('id') || '1';
  type ProductSpecification = { [key: string]: string };

type NutritionalValue = { [key: string]: string };

type HarvestInfo = { [key: string]: string };

type ExportMarket = {
  country: string;
  volume: string;
  standard: string;
};

interface ProductItem {
  name: string;
  englishName: string;
  image: string;
  price: string;
  unit: string;
  origin: string;
  season: string;
  rating: number;
  description: string;
  detailedDescription: string;
  specifications: ProductSpecification;
  nutritionalValue: NutritionalValue;
  harvestInfo: HarvestInfo;
  packaging: string[];
  exportMarkets: ExportMarket[];
  certifications: string[];
  advantages: string[];
}

  // Mock product data - in real app this would come from API
  const productData: { [key: string]: ProductItem } = {
    '1': {
      name: "Chanh T∆∞∆°i",
      englishName: "Fresh Lime",
      image: "üçã",
      price: "$2,500 - $3,200",
      unit: "/t·∫•n",
      origin: "ƒê·ªìng b·∫±ng s√¥ng C·ª≠u Long",
      season: "Quanh nƒÉm",
      rating: 4.8,
      description: "Chanh t∆∞∆°i ch·∫•t l∆∞·ª£ng cao v·ªõi ƒë·ªô chua t·ª± nhi√™n, v·ªè m·ªèng, nhi·ªÅu n∆∞·ªõc c·ªët. ƒê∆∞·ª£c tr·ªìng theo ti√™u chu·∫©n GAP, ƒë·∫£m b·∫£o an to√†n th·ª±c ph·∫©m v√† ch·∫•t l∆∞·ª£ng xu·∫•t kh·∫©u cao.",
      detailedDescription: "Chanh t∆∞∆°i c·ªßa ch√∫ng t√¥i ƒë∆∞·ª£c tr·ªìng t·∫°i c√°c v√πng ƒë·∫•t ph√π sa m√†u m·ª° c·ªßa ƒë·ªìng b·∫±ng s√¥ng C·ª≠u Long, n∆°i c√≥ kh√≠ h·∫≠u nhi·ªát ƒë·ªõi ·∫©m v√† ngu·ªìn n∆∞·ªõc ng·ªçt d·ªìi d√†o. V·ªõi quy tr√¨nh canh t√°c theo ti√™u chu·∫©n GAP (Good Agricultural Practices), ch√∫ng t√¥i ƒë·∫£m b·∫£o m·ªói qu·∫£ chanh ƒë·ªÅu ƒë·∫°t ch·∫•t l∆∞·ª£ng xu·∫•t kh·∫©u cao nh·∫•t.",
      specifications: {
        "K√≠ch th∆∞·ªõc": "4-6cm ƒë∆∞·ªùng k√≠nh",
        "Tr·ªçng l∆∞·ª£ng": "30-50g/qu·∫£",
        "ƒê·ªô chua": "6-8% acid citric",
        "ƒê·ªô ·∫©m": "<12%",
        "ƒê·ªô Brix": "8-10¬∞",
        "M√†u s·∫Øc": "Xanh t∆∞∆°i ƒë·∫øn v√†ng nh·∫°t",
        "H√¨nh d·∫°ng": "Oval, ƒë·ªÅu ƒë·∫∑n",
        "V·ªè": "M·ªèng, m·ªãn, kh√¥ng t·ª≥ v·∫øt"
      },
      nutritionalValue: {
        "Vitamin C": "40-60mg/100g",
        "Axit citric": "6-8%",
        "ƒê∆∞·ªùng t·ª± nhi√™n": "8-10%",
        "Ch·∫•t x∆°": "2-3g/100g",
        "Kali": "138mg/100g",
        "Canxi": "33mg/100g"
      },
      harvestInfo: {
        "Th·ªùi gian thu ho·∫°ch": "Quanh nƒÉm",
        "ƒê·ªô ch√≠n": "75-80% ch√≠n",
        "Ph∆∞∆°ng ph√°p": "H√°i th·ªß c√¥ng",
        "Th·ªùi ƒëi·ªÉm": "S√°ng s·ªõm (5-7h)",
        "B·∫£o qu·∫£n": "Nhi·ªát ƒë·ªô 10-12¬∞C",
        "ƒê·ªô ·∫©m b·∫£o qu·∫£n": "85-90%"
      },
      packaging: [
        "Th√πng carton 10kg (100 qu·∫£/th√πng)",
        "L√≥t x·ªëp PE b·∫£o v·ªá t·ª´ng qu·∫£",
        "T√∫i l∆∞·ªõi 5kg cho th·ªã tr∆∞·ªùng n·ªôi ƒë·ªãa",
        "Pallet chu·∫©n 1.2x1.0m"
      ],
      exportMarkets: [
        { country: "Nh·∫≠t B·∫£n", volume: "2,500 t·∫•n/nƒÉm", standard: "JAS Organic" },
        { country: "H√†n Qu·ªëc", volume: "1,800 t·∫•n/nƒÉm", standard: "K-Organic" },
        { country: "Singapore", volume: "1,200 t·∫•n/nƒÉm", standard: "AVA" },
        { country: "Malaysia", volume: "800 t·∫•n/nƒÉm", standard: "HALAL" }
      ],
      certifications: [
        "GAP (Good Agricultural Practices)",
        "ISO 22000:2018",
        "HACCP",
        "Organic Certificate",
        "Phytosanitary Certificate"
      ],
      advantages: [
        "V·ªè m·ªèng, nhi·ªÅu n∆∞·ªõc c·ªët",
        "H∆∞∆°ng th∆°m ƒë·∫∑c tr∆∞ng",
        "Kh√¥ng s·ª≠ d·ª•ng thu·ªëc tr·ª´ s√¢u",
        "Thu ho·∫°ch ƒë√∫ng ƒë·ªô ch√≠n",
        "B·∫£o qu·∫£n t∆∞∆°i ngon l√¢u d√†i",
        "Gi√° c·∫£ c·∫°nh tranh"
      ]
    },
    '2': {
      name: "B∆∞·ªüi Da Xanh",
      englishName: "Green Skin Pomelo",
      image: "ü•≠",
      price: "$1,800 - $2,500",
      unit: "/t·∫•n",
      origin: "B·∫øn Tre, Ti·ªÅn Giang",
      season: "Th√°ng 8 - Th√°ng 2",
      rating: 4.9,
      description: "B∆∞·ªüi da xanh ƒë·∫∑c s·∫£n mi·ªÅn T√¢y v·ªõi m√∫i ng·ªçt, √≠t h·∫°t. Tr√°i to, v·ªè xanh m·ªãn, th·ªãt tr·∫Øng ng√†, ng·ªçt thanh m√°t v·ªõi h∆∞∆°ng th∆°m ƒë·∫∑c tr∆∞ng.",
      detailedDescription: "B∆∞·ªüi da xanh l√† ƒë·∫∑c s·∫£n n·ªïi ti·∫øng c·ªßa mi·ªÅn T√¢y Nam B·ªô, ƒë∆∞·ª£c tr·ªìng ch·ªß y·∫øu t·∫°i B·∫øn Tre v√† Ti·ªÅn Giang. V·ªõi kh√≠ h·∫≠u nhi·ªát ƒë·ªõi v√† ƒë·∫•t ph√π sa m√†u m·ª°, b∆∞·ªüi da xanh ·ªü ƒë√¢y c√≥ ch·∫•t l∆∞·ª£ng v∆∞·ª£t tr·ªôi v·ªõi m√∫i to, ng·ªçt v√† √≠t h·∫°t.",
      specifications: {
        "Tr·ªçng l∆∞·ª£ng": "1-2kg/tr√°i",
        "ƒê∆∞·ªùng ƒë·ªô": "10-12 Brix",
        "ƒê·ªô ·∫©m": "87-90%",
        "S·ªë m√∫i": "12-16 m√∫i/tr√°i",
        "T·ª∑ l·ªá th·ªãt": "65-70%",
        "M√†u v·ªè": "Xanh ƒë·ªÅu, b√≥ng",
        "ƒê·ªô d√†y v·ªè": "2-3cm",
        "H√¨nh d·∫°ng": "Tr√≤n ƒë·ªÅu, h∆°i d·∫πt"
      },
      nutritionalValue: {
        "Vitamin C": "25-35mg/100g",
        "ƒê∆∞·ªùng t·ª± nhi√™n": "10-12%",
        "Ch·∫•t x∆°": "0.6-0.8g/100g",
        "Kali": "235mg/100g",
        "Folate": "8-12mcg/100g",
        "Vitamin A": "2-4IU/100g"
      },
      harvestInfo: {
        "Th·ªùi gian thu ho·∫°ch": "Th√°ng 8 - Th√°ng 2",
        "ƒê·ªô ch√≠n": "85-90% ch√≠n",
        "Ph∆∞∆°ng ph√°p": "H√°i th·ªß c√¥ng b·∫±ng k√©o",
        "Th·ªùi ƒëi·ªÉm": "Bu·ªïi chi·ªÅu m√°t",
        "B·∫£o qu·∫£n": "Nhi·ªát ƒë·ªô 8-10¬∞C",
        "ƒê·ªô ·∫©m b·∫£o qu·∫£n": "85-88%"
      },
      packaging: [
        "L∆∞·ªõi nh·ª±a ƒë·ªè (6-8 tr√°i/l∆∞·ªõi)",
        "Th√πng carton 20kg (8-12 tr√°i)",
        "Foam b·∫£o v·ªá t·ª´ng tr√°i",
        "Container l·∫°nh 40ft"
      ],
      exportMarkets: [
        { country: "Trung Qu·ªëc", volume: "15,000 t·∫•n/nƒÉm", standard: "GACC" },
        { country: "Th√°i Lan", volume: "3,200 t·∫•n/nƒÉm", standard: "Thai GAP" },
        { country: "Campuchia", volume: "2,800 t·∫•n/nƒÉm", standard: "HACCP" },
        { country: "√öc", volume: "1,500 t·∫•n/nƒÉm", standard: "AQIS" }
      ],
      certifications: [
        "VietGAP Certificate",
        "GlobalGAP",
        "ISO 22000:2018",
        "HACCP",
        "Organic Certificate"
      ],
      advantages: [
        "M√∫i to, ng·ªçt t·ª± nhi√™n",
        "√çt h·∫°t, th·ªãt tr·∫Øng ng√†",
        "H∆∞∆°ng th∆°m ƒë·∫∑c tr∆∞ng",
        "B·∫£o qu·∫£n ƒë∆∞·ª£c l√¢u",
        "Gi√° tr·ªã dinh d∆∞·ª°ng cao",
        "Th∆∞∆°ng hi·ªáu uy t√≠n"
      ]
    },
    '3': {
      name: "Cam S√†nh",
      englishName: "Sanh Orange",
      image: "üçä",
      price: "$2,200 - $2,800",
      unit: "/t·∫•n",
      origin: "H·∫≠u Giang, C·∫ßn Th∆°",
      season: "Th√°ng 10 - Th√°ng 3",
      rating: 4.7,
      description: "Cam s√†nh ng·ªçt ƒë·∫∑c s·∫£n mi·ªÅn T√¢y v·ªõi v·ªè xanh, th·ªãt cam ng·ªçt, nhi·ªÅu n∆∞·ªõc. Gi√†u vitamin C, ch·∫•t l∆∞·ª£ng xu·∫•t kh·∫©u cao.",
      detailedDescription: "Cam s√†nh l√† gi·ªëng cam ƒë·∫∑c s·∫£n c·ªßa mi·ªÅn T√¢y Nam B·ªô, c√≥ v·ªè xanh v√† th·ªãt cam ng·ªçt ƒë·∫∑c tr∆∞ng. ƒê∆∞·ª£c tr·ªìng ch·ªß y·∫øu t·∫°i H·∫≠u Giang v√† C·∫ßn Th∆°, cam s√†nh c√≥ ch·∫•t l∆∞·ª£ng v∆∞·ª£t tr·ªôi v·ªõi ƒë·ªô ng·ªçt cao v√† gi√†u vitamin C.",
      specifications: {
        "ƒê∆∞·ªùng k√≠nh": "6-8cm",
        "Tr·ªçng l∆∞·ª£ng": "150-250g/qu·∫£",
        "ƒê∆∞·ªùng ƒë·ªô": "8-10 Brix",
        "ƒê·ªô ·∫©m": "85-90%",
        "S·ªë m√∫i": "8-12 m√∫i/qu·∫£",
        "T·ª∑ l·ªá n∆∞·ªõc": "45-55%",
        "M√†u v·ªè": "Xanh ƒë·∫≠m",
        "M√†u th·ªãt": "Cam ƒë·∫≠m"
      },
      nutritionalValue: {
        "Vitamin C": "40-50mg/100g",
        "ƒê∆∞·ªùng t·ª± nhi√™n": "8-10%",
        "Ch·∫•t x∆°": "2.4g/100g",
        "Kali": "181mg/100g",
        "Folate": "15-20mcg/100g",
        "Beta-carotene": "71mcg/100g"
      },
      harvestInfo: {
        "Th·ªùi gian thu ho·∫°ch": "Th√°ng 10 - Th√°ng 3",
        "ƒê·ªô ch√≠n": "80-85% ch√≠n",
        "Ph∆∞∆°ng ph√°p": "H√°i th·ªß c√¥ng",
        "Th·ªùi ƒëi·ªÉm": "S√°ng s·ªõm",
        "B·∫£o qu·∫£n": "Nhi·ªát ƒë·ªô 8-12¬∞C",
        "ƒê·ªô ·∫©m b·∫£o qu·∫£n": "85-90%"
      },
      packaging: [
        "Th√πng carton 15kg (60-80 qu·∫£)",
        "Gi·∫•y g√≥i t·ª´ng qu·∫£",
        "T√∫i l∆∞·ªõi 3kg",
        "Container l·∫°nh 20ft/40ft"
      ],
      exportMarkets: [
        { country: "Nga", volume: "8,500 t·∫•n/nƒÉm", standard: "GOST" },
        { country: "Kazakhstan", volume: "3,200 t·∫•n/nƒÉm", standard: "ST RK" },
        { country: "Philippines", volume: "2,100 t·∫•n/nƒÉm", standard: "BPI" },
        { country: "Indonesia", volume: "1,800 t·∫•n/nƒÉm", standard: "SNI" }
      ],
      certifications: [
        "VietGAP Certificate",
        "ISO 22000:2018",
        "HACCP",
        "Halal Certificate",
        "Kosher Certificate"
      ],
      advantages: [
        "V·ªè xanh ƒë·∫∑c tr∆∞ng",
        "Th·ªãt cam ng·ªçt m√°t",
        "Gi√†u vitamin C",
        "√çt h·∫°t, nhi·ªÅu n∆∞·ªõc",
        "B·∫£o qu·∫£n t·ªët",
        "Th∆∞∆°ng hi·ªáu n·ªïi ti·∫øng"
      ]
    }
  };

  const product = productData[productId] || productData['1'];

  return (

     
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100">
      {/* Header */}
      <header className="bg-white/95 backdrop-blur-sm border-b border-green-100 sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <div className="h-10 w-10 bg-gradient-to-br from-green-600 to-emerald-600 rounded-lg flex items-center justify-center">
                <Leaf className="h-6 w-6 text-white" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">AgroTrade</h1>
                <p className="text-xs text-gray-600">Xu·∫•t Nh·∫≠p Kh·∫©u N√¥ng Nghi·ªáp</p>
              </div>
            </div>
            <nav className="hidden md:flex items-center space-x-8">
              <Link href="/" className="text-gray-700 hover:text-green-600 transition-colors">Trang ch·ªß</Link>
              <Link href="/services" className="text-gray-700 hover:text-green-600 transition-colors">D·ªãch v·ª•</Link>
              <Link href="/products" className="text-gray-700 hover:text-green-600 transition-colors">S·∫£n ph·∫©m</Link>
              <Link href="/about" className="text-gray-700 hover:text-green-600 transition-colors">V·ªÅ ch√∫ng t√¥i</Link>
              <Link href="/contact" className="text-gray-700 hover:text-green-600 transition-colors">Li√™n h·ªá</Link>
            </nav>
            <Button className="bg-green-600 hover:bg-green-700">
              Li√™n h·ªá ngay
            </Button>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-16">
        {/* Back Button */}
        <Link href="/products" className="inline-flex items-center text-green-600 hover:text-green-700 mb-8">
          <ArrowLeft className="h-4 w-4 mr-2" />
          Quay l·∫°i danh s√°ch s·∫£n ph·∫©m
        </Link>

        {/* Product Overview */}
        <div className="grid lg:grid-cols-2 gap-12 mb-16">
          <div className="space-y-6">
            <div className="text-center lg:text-left">
              <div className="text-8xl mb-4">{product.image}</div>
              <Badge className="bg-yellow-100 text-yellow-800 mb-4">
                <Star className="h-4 w-4 mr-1" />
                {product.rating} sao
              </Badge>
              <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-2">
                {product.name}
              </h1>
              <p className="text-xl text-green-600 font-medium mb-4">
                {product.englishName}
              </p>
              <div className="flex items-center justify-center lg:justify-start space-x-4 mb-6">
                <span className="text-3xl font-bold text-green-600">
                  {product.price}
                  <span className="text-lg text-gray-500">{product.unit}</span>
                </span>
                <Badge variant="outline" className="border-green-600 text-green-600">
                  {product.season}
                </Badge>
              </div>
              <p className="text-gray-600 leading-relaxed">
                {product.detailedDescription}
              </p>
            </div>
          </div>

          <div className="space-y-6">
            <Card className="bg-white/90 backdrop-blur-sm border-green-200">
              <CardHeader>
                <CardTitle className="flex items-center text-xl">
                  <Globe className="h-5 w-5 text-green-600 mr-2" />
                  Th√¥ng tin c∆° b·∫£n
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <span className="text-sm font-medium text-gray-700">Xu·∫•t x·ª©:</span>
                    <p className="text-gray-900">{product.origin}</p>
                  </div>
                  <div>
                    <span className="text-sm font-medium text-gray-700">M√πa v·ª•:</span>
                    <p className="text-gray-900">{product.season}</p>
                  </div>
                </div>
                <div className="pt-4 space-y-2">
                  <Link href={`/quote-request?product=${encodeURIComponent(product.name)}`}>
                    <Button className="w-full bg-green-600 hover:bg-green-700">
                      Y√™u c·∫ßu b√°o gi√°
                    </Button>
                  </Link>
                  <Button variant="outline" className="w-full border-green-600 text-green-600 hover:bg-green-50">
                    T·∫£i catalog PDF
                  </Button>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-green-600 to-emerald-600 text-white">
              <CardContent className="p-6">
                <h3 className="text-lg font-semibold mb-3">∆Øu ƒëi·ªÉm n·ªïi b·∫≠t</h3>
                <div className="grid grid-cols-1 gap-2">
                  {product.advantages.map((advantage: string, index: number) => (
                    <div key={index} className="flex items-center space-x-2">
                      <CheckCircle className="h-4 w-4 text-green-200" />
                      <span className="text-sm">{advantage}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Detailed Information Tabs */}
        <Card className="bg-white/90 backdrop-blur-sm border-green-200">
          <CardContent className="p-0">
            <Tabs defaultValue="specifications" className="w-full">
              <TabsList className="grid w-full grid-cols-6 lg:grid-cols-6">
                <TabsTrigger value="specifications">Th√¥ng s·ªë</TabsTrigger>
                <TabsTrigger value="nutrition">Dinh d∆∞·ª°ng</TabsTrigger>
                <TabsTrigger value="harvest">Thu ho·∫°ch</TabsTrigger>
                <TabsTrigger value="packaging">ƒê√≥ng g√≥i</TabsTrigger>
                <TabsTrigger value="markets">Th·ªã tr∆∞·ªùng</TabsTrigger>
                <TabsTrigger value="certificates">Ch·ª©ng ch·ªâ</TabsTrigger>
              </TabsList>
              
              <TabsContent value="specifications" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                    <BarChart3 className="h-5 w-5 text-green-600 mr-2" />
                    Th√¥ng s·ªë k·ªπ thu·∫≠t
                  </h3>
                  <div className="grid md:grid-cols-2 gap-4">
                    {Object.entries(product.specifications).map(([key, value]) => (
                      <div key={key} className="bg-gray-50 p-4 rounded-lg">
                        <span className="text-sm font-medium text-gray-700">{key}:</span>
                        <p className="text-gray-900 font-medium">  {typeof value === 'string' || typeof value === 'number' ? value : JSON.stringify(value)}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>

              <TabsContent value="nutrition" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900">
                    Gi√° tr·ªã dinh d∆∞·ª°ng (per 100g)
                  </h3>
                  <div className="grid md:grid-cols-3 gap-4">
                    {Object.entries(product.nutritionalValue).map(([key, value]) => (
                      <div key={key} className="bg-green-50 p-4 rounded-lg text-center">
                        <p className="text-2xl font-bold text-green-600">  {typeof value === 'string' || typeof value === 'number' ? value : JSON.stringify(value)}</p>
                        <p className="text-sm text-gray-700">{key}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>

              <TabsContent value="harvest" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                    <Calendar className="h-5 w-5 text-green-600 mr-2" />
                    Th√¥ng tin thu ho·∫°ch
                  </h3>
                  <div className="grid md:grid-cols-2 gap-6">
                    {Object.entries(product.harvestInfo).map(([key, value]) => (
                      <div key={key} className="border-l-4 border-green-500 pl-4">
                        <span className="text-sm font-medium text-gray-700">{key}:</span>
                        <p className="text-gray-900 font-medium">  {typeof value === 'string' || typeof value === 'number' ? value : JSON.stringify(value)}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>

              <TabsContent value="packaging" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                    <Package className="h-5 w-5 text-green-600 mr-2" />
                    Quy c√°ch ƒë√≥ng g√≥i
                  </h3>
                  <div className="grid md:grid-cols-2 gap-4">
                    {product.packaging.map((pack: string, index: number) => (
                      <div key={index} className="bg-blue-50 p-4 rounded-lg flex items-center space-x-3">
                        <Package className="h-5 w-5 text-blue-600" />
                        <span className="text-gray-900">{pack}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>

              <TabsContent value="markets" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                    <Map className="h-5 w-5 text-green-600 mr-2" />
                    Th·ªã tr∆∞·ªùng xu·∫•t kh·∫©u
                  </h3>
                  <div className="grid gap-4">
                    {product.exportMarkets.map((market: ExportMarket, index: number) => (
                      <div key={index} className="bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-lg border border-green-200">
                        <div className="flex justify-between items-center">
                          <div>
                            <h4 className="font-semibold text-gray-900">{market.country}</h4>
                            <p className="text-sm text-gray-600">Kh·ªëi l∆∞·ª£ng: {market.volume}</p>
                          </div>
                          <Badge variant="outline" className="border-green-600 text-green-600">
                            {market.standard}
                          </Badge>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>

              <TabsContent value="certificates" className="p-6">
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                    <Award className="h-5 w-5 text-green-600 mr-2" />
                    Ch·ª©ng ch·ªâ & Ti√™u chu·∫©n
                  </h3>
                  <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {product.certifications.map((cert: string, index: number) => (
                      <div key={index} className="bg-yellow-50 p-4 rounded-lg border border-yellow-200 text-center">
                        <Award className="h-8 w-8 text-yellow-600 mx-auto mb-2" />
                        <p className="font-medium text-gray-900">{cert}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </TabsContent>
            </Tabs>
          </CardContent>
        </Card>

        {/* Contact CTA */}
        <div className="mt-16 text-center">
          <Card className="bg-gradient-to-r from-green-600 to-emerald-600 text-white border-0">
            <CardContent className="p-8">
              <h2 className="text-3xl font-bold mb-4">C·∫ßn th√™m th√¥ng tin chi ti·∫øt?</h2>
              <p className="text-xl text-green-100 mb-6">
                Li√™n h·ªá v·ªõi chuy√™n gia c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt v·ªÅ s·∫£n ph·∫©m v√† quy tr√¨nh xu·∫•t kh·∫©u.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Link href={`/quote-request?product=${encodeURIComponent(product.name)}`}>
                  <Button size="lg" className="bg-white text-green-600 hover:bg-gray-100">
                    <FileText className="mr-2 h-4 w-4" />
                    Y√™u c·∫ßu b√°o gi√° ngay
                  </Button>
                </Link>
                <Button size="lg" variant="outline" className="border-white text-black hover:bg-white hover:text-green-600">
                  <Truck className="mr-2 h-4 w-4" />
                  T∆∞ v·∫•n logistics
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
